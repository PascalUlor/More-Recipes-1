// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AllRecipesPage component should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <AllRecipesPage
        errorMessage=""
        fetchAllRecipes={[MockFunction]}
        fetchPopularRecipes={[MockFunction]}
        fetchedAllRecipes={Array []}
        fetchedPopularRecipes={Array []}
        isAllFetching={false}
        isPopularFetching={false}
        paginationDetails={Object {}}
      />
    </BrowserRouter>
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <AllRecipesPage
        errorMessage=""
        fetchAllRecipes={[MockFunction]}
        fetchPopularRecipes={[MockFunction]}
        fetchedAllRecipes={Array []}
        fetchedPopularRecipes={Array []}
        isAllFetching={false}
        isPopularFetching={false}
        paginationDetails={Object {}}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "errorMessage": "",
        "fetchAllRecipes": [MockFunction],
        "fetchPopularRecipes": [MockFunction],
        "fetchedAllRecipes": Array [],
        "fetchedPopularRecipes": Array [],
        "isAllFetching": false,
        "isPopularFetching": false,
        "paginationDetails": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <AllRecipesPage
          errorMessage=""
          fetchAllRecipes={[MockFunction]}
          fetchPopularRecipes={[MockFunction]}
          fetchedAllRecipes={Array []}
          fetchedPopularRecipes={Array []}
          isAllFetching={false}
          isPopularFetching={false}
          paginationDetails={Object {}}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "errorMessage": "",
          "fetchAllRecipes": [MockFunction],
          "fetchPopularRecipes": [MockFunction],
          "fetchedAllRecipes": Array [],
          "fetchedPopularRecipes": Array [],
          "isAllFetching": false,
          "isPopularFetching": false,
          "paginationDetails": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
